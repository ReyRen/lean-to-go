并行：
    借助多核CPU实现
并发：
    宏观：用户体验上，程序在并行执行
    微观：多个计划任务，顺序执行，在飞快的切换，轮换使用CPU时间片

进程并发：
    程序： 编译成功得到的二进制， 占用磁盘空间。
    进程： 运行起来程序，占用系统资源。（内存）

进程的状态：
    初始态、就绪态、运行态、挂起（阻塞）态、终止态

线程并发：
    线程： LWT轻量级进程。 最小的执行单位（CPU分配时间轮片的对象）。进程是最小的系统资源分配单位

同步：
    线程同步，指一个线程发出某一功能调用时，在没有的到结果之前，该调用不返回。同时，其线程为保持数据一致性，不能调用该功能。
    目的是为了避免数据混乱，解决时间有关的错误。
    线程同步机制：
        互斥锁（互斥量）：建议锁。拿到锁之后，才能访问数据，没有拿到锁的线程，阻塞等待。等到拿锁的线程释放锁
        读写锁（读属性、写属性）：写独占，读共享。写锁优先级高。

协程并发：
    在协程中，调用一个任务就像调用一个函数一样，消耗的系统资源最少，达能达到进程、线程并发相同的效果。

总结：
    进程、线程、协程都可以完成并发
    稳定性强、节省资源、效率高